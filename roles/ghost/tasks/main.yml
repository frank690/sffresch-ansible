- name: Generate passwords on the fly
  set_fact:
    ghost_password: "{{ lookup('password', '/dev/null chars=ascii_letters,digits length=16') }}"

- name: Install nginx
  apt:
    pkg:
    - nginx

- name: Adjust ufw settings to nginx
  ufw:
    name: 'Nginx Full'
    rule: allow

- name: Install MySQL
  apt:
    pkg:
      - mysql-server

- name: Make sure PyMySQL is installed
  pip:
    name: PyMySQL

- name: Create MySQL config file
  template:
    src: .my.cnf.j2
    dest: /root/.my.cnf
    owner: root
    mode: 0600
  notify: Restart MySQL

- name: Set root on mysql server
  mysql_user:
    login_unix_socket: /var/run/mysqld/mysqld.sock
    priv: '*.*:ALL,GRANT'
    check_implicit_admin: true
    name: root
    password: "{{ ghost_password }}"
    state: present
  notify: Restart MySQL

- name: Install the gpg key for nodejs LTS
  apt_key:
    url: "https://deb.nodesource.com/gpgkey/nodesource.gpg.key"
    state: present

- name: Install the nodejs LTS repos
  apt_repository:
    repo: "deb https://deb.nodesource.com/node_12.x {{ ansible_distribution_release }} main"
    state: present
    update_cache: yes

- name: Install the nodejs
  apt:
    name: nodejs
    state: present

- name: Install Ghost-CLI node.js package globally.
  npm:
    name: ghost-cli
    global: yes

- name: Create ghost directory
  file:
    name: "{{ vars.ghost.path }}"
    owner: "{{ vars.ghost.mysql.user }}"
    group: "{{ vars.ghost.mysql.user }}"
    state: directory
    mode: 755

# Install Ghost without the interactive setup
#- name: Ghost | Install Ghost
#  shell: ghost install --no-setup
#  args:
#    chdir: "{{ vars.ghost.path }}"

#- name: Ghost | Configure & Setup Ghost
#  shell: "ghost setup --url=https://{{ vars.ghost.domain }} --db=mysql --dbhost=localhost --dbuser={{ vars.ghost.mysql.user }} --dbpass={{ ghost_password }} --dbname=ghost --start"
#  args:
#    chdir: "{{ vars.ghost.path }}"